#
#   - MIME::Base64 -
#   This spec file was automatically generated by cpan2rpm [ver: 2.026]
#   The following arguments were used:
#       --packager=Steve Freegard <steve.freegard@fsl.com> --distribution=Fortress Systems - SMGateway --make-maker=PREFIX=/opt/Fortress/utils --make-install=DESTDIR=%{buildroot} --spec-only --no-prfx --define=_defaultdocdir /opt/Fortress/utils/doc --define=_prefix / --name=fsmg-perl-MIME-Base64 ../SOURCES/MIME-Base64-3.05.tar.gz --author=Gisle Aas <gisle@ActiveState.com>
#   For more information on cpan2rpm please visit: http://perl.arix.com/
#

%define pkgname MailScanner-perl-MIME-Base64
%define filelist %{pkgname}-%{version}-filelist
%define NVR %{pkgname}-%{version}-%{release}
%define maketest 0
# user definitions
%define _defaultdocdir /usr/lib/MailScanner/utils/doc
%define _prefix /


name:      MailScanner-perl-MIME-Base64
summary:   MailScanner-perl-MIME-Base64 - Encoding and decoding of base64 strings
version:   3.05
release:   5
vendor:    Gisle
packager:  Steve Freegard <steve.freegard@fsl.com>
distribution: Fortress Systems - MailScanner
license:   Artistic
group:     Applications/CPAN
url:       http://www.cpan.org
buildroot: %{_tmppath}/%{name}-%{version}-%(id -u -n)
#buildarch: i386
prefix:    %(echo %{_prefix})
source:    MIME-Base64-3.05.tar.gz

%description
This module provides functions to encode and decode strings into and from the
base64 encoding specified in RFC 2045 - I<MIME (Multipurpose Internet
Mail Extensions)>. The base64 encoding is designed to represent
arbitrary sequences of octets in a form that need not be humanly
readable. A 65-character subset ([A-Za-z0-9+/=]) of US-ASCII is used,
enabling 6 bits to be represented per printable character.

The following functions are provided:

=over 4

=item encode_base64($str)

=item encode_base64($str, $eol);

Encode data by calling the encode_base64() function.  The first
argument is the string to encode.  The second argument is the
line-ending sequence to use.  It is optional and defaults to "\n".  The
returned encoded string is broken into lines of no more than 76
characters each and it will end with $eol unless it is empty.  Pass an
empty string as second argument if you do not want the encoded string
to be broken into lines.

=item decode_base64($str)

Decode a base64 string by calling the decode_base64() function.  This
function takes a single argument which is the string to decode and
returns the decoded data.

Any character not part of the 65-character base64 subset is
silently ignored.  Characters occurring after a '=' padding character
are never decoded.

If the length of the string to decode, after ignoring
non-base64 chars, is not a multiple of 4 or if padding occurs too early,
then a warning is generated if perl is running under C<-w>.

=back

If you prefer not to import these routines into your namespace, you can
call them as:

    use MIME::Base64 ();
    $encoded = MIME::Base64::encode($decoded);
    $decoded = MIME::Base64::decode($encoded);

#
# This package was generated automatically with the cpan2rpm
# utility.  To get this software or for more information
# please visit: http://perl.arix.com/
#

%prep
%setup -q -n MIME-Base64-%{version} 
chmod -R u+w %{_builddir}/MIME-Base64-%{version}

%build
grep -rsl '^#!.*perl' . |
grep -v '.bak$' |xargs --no-run-if-empty \
%__perl -MExtUtils::MakeMaker -e 'MY->fixin(@ARGV)'
CFLAGS="$RPM_OPT_FLAGS"
#JKF %{__perl} Makefile.PL PREFIX=/usr/lib/MailScanner/utils
%{__perl} Makefile.PL PREFIX=$RPM_BUILD_ROOT/usr/lib/MailScanner/utils
%{__make} 
%if %maketest
%{__make} test
%endif

%install
[ "%{buildroot}" != "/" ] && rm -rf %{buildroot}

#%{makeinstall} DESTDIR=%{buildroot}
#JKF make install_site DESTDIR=%{buildroot}
make install_site

[ -x /usr/lib/rpm/brp-compress ] && /usr/lib/rpm/brp-compress

# SuSE Linux
if [ -e /etc/SuSE-release -o -e /etc/UnitedLinux-release ]
then
    %{__mkdir_p} %{buildroot}/var/adm/perl-modules
    %{__cat} `find %{buildroot} -name "perllocal.pod"`  \
        | %{__sed} -e s+%{buildroot}++g                 \
        > %{buildroot}/var/adm/perl-modules/%{name}
fi

# remove special files
find %{buildroot} -name "perllocal.pod" \
    -o -name ".packlist"                \
    -o -name "*.bs"                     \
    |xargs -i rm -f {}
# JKF Remove stray files from /var/tmp as well
rm -rf %{buildroot}/var

# no empty directories
find %{buildroot}%{_prefix}             \
    -type d -depth                      \
    -exec rmdir {} \; 2>/dev/null

%{__perl} -MFile::Find -le '
    find({ wanted => \&wanted, no_chdir => 1}, "%{buildroot}");
    print "%doc  Changes README";
    for my $x (sort @dirs, @files) {
        push @ret, $x unless indirs($x);
        }
    print join "\n", sort @ret;

    sub wanted {
        return if /auto$/;

        local $_ = $File::Find::name;
        my $f = $_; s|^\Q%{buildroot}\E||;
        return unless length;
        return $files[@files] = $_ if -f $f;

        $d = $_;
        /\Q$d\E/ && return for reverse sort @INC;
        $d =~ /\Q$_\E/ && return
            for qw|/etc %_prefix/man %_prefix/bin %_prefix/share|;

        $dirs[@dirs] = $_;
        }

    sub indirs {
        my $x = shift;
        $x =~ /^\Q$_\E\// && $x ne $_ && return 1 for @dirs;
        }
    ' > %filelist

[ -z %filelist ] && {
    echo "ERROR: empty %files listing"
    exit -1
    }

%clean
[ "%{buildroot}" != "/" ] && rm -rf %{buildroot}

%files -f %filelist
%defattr(-,root,root)

%changelog
* Sat Oct 23 2004 smf@vm1.office.fsl
- Initial build.
